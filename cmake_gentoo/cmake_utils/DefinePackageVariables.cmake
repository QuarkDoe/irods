#====================
#
#====================

if( NOT IRODS_LINUX_DISTRIBUTION_NAME )
	execute_process(
		COMMAND "python" "-c" "from __future__ import print_function; import platform; print( platform.linux_distribution()[0].split()[0].strip().lower(), end='' )"
		RESULT_VARIABLE IRODS_EXECUTE_PROCESS_RESULT_LINUX_DISTRIBUTION_NAME
		OUTPUT_VARIABLE IRODS_LINUX_DISTRIBUTION_NAME
	)
	if( NOT ${IRODS_EXECUTE_PROCESS_RESULT_LINUX_DISTRIBUTION_NAME} STREQUAL "0" )
		message( FATAL_ERROR "Linux platform name detection failed\n${IRODS_EXECUTE_PROCESS_RESULT_LINUX_DISTRIBUTION_NAME}" )
	endif()
	set( IRODS_LINUX_DISTRIBUTION_NAME ${IRODS_LINUX_DISTRIBUTION_NAME} CACHE STRING "Linux distribution name, e.g. {ubuntu, centos, ...}." FORCE )
	message( STATUS "Setting unspecified IRODS_LINUX_DISTRIBUTION_NAME to '${IRODS_LINUX_DISTRIBUTION_NAME}'" )
endif()

if( NOT IRODS_LINUX_DISTRIBUTION_VERSION_MAJOR )
	execute_process(
		COMMAND "python" "-c" "from __future__ import print_function; import platform; print(platform.linux_distribution()[1].strip().lower().split('.')[0], end='')"
		RESULT_VARIABLE IRODS_EXECUTE_PROCESS_RESULT_LINUX_DISTRIBUTION_VERSION_MAJOR
		OUTPUT_VARIABLE IRODS_LINUX_DISTRIBUTION_VERSION_MAJOR
	)
	if( NOT ${IRODS_EXECUTE_PROCESS_RESULT_LINUX_DISTRIBUTION_VERSION_MAJOR} STREQUAL "0" )
		message( FATAL_ERROR "Linux platform name detection failed\n${IRODS_EXECUTE_PROCESS_RESULT_LINUX_DISTRIBUTION_VERSION_MAJOR}" )
	endif()
	set( IRODS_LINUX_DISTRIBUTION_VERSION_MAJOR ${IRODS_LINUX_DISTRIBUTION_VERSION_MAJOR} CACHE STRING "Linux distribution name, e.g. {ubuntu, centos, ...}." FORCE )
	message( STATUS "Setting unspecified IRODS_LINUX_DISTRIBUTION_VERSION_MAJOR to '${IRODS_LINUX_DISTRIBUTION_VERSION_MAJOR}'" )
endif()

if( IRODS_LINUX_DISTRIBUTION_NAME STREQUAL "ubuntu" OR IRODS_LINUX_DISTRIBUTION_NAME STREQUAL "debian" )
	if( NOT IRODS_LINUX_DISTRIBUTION_VERSION_CODENAME )
		execute_process(
			COMMAND "lsb_release" "-s" "-c"
			RESULT_VARIABLE IRODS_EXECUTE_PROCESS_RESULT_LINUX_DISTRIBUTION_VERSION_CODENAME
			OUTPUT_VARIABLE IRODS_LINUX_DISTRIBUTION_VERSION_CODENAME
		)
	string( STRIP ${IRODS_LINUX_DISTRIBUTION_VERSION_CODENAME} IRODS_LINUX_DISTRIBUTION_VERSION_CODENAME )
	if( NOT ${IRODS_EXECUTE_PROCESS_RESULT_LINUX_DISTRIBUTION_VERSION_CODENAME} STREQUAL "0" )
      message(FATAL_ERROR "Linux lsb_release shortname detection failed\n${IRODS_EXECUTE_PROCESS_RESULT_LINUX_DISTRIBUTION_VERSION_CODENAME}")
    endif()
    set(IRODS_LINUX_DISTRIBUTION_VERSION_CODENAME ${IRODS_LINUX_DISTRIBUTION_VERSION_CODENAME} CACHE STRING "Linux distribution version codename, e.g. {precise, wheezy, trusty, jessie, ...}." FORCE)
    message(STATUS "Setting unspecified IRODS_LINUX_DISTRIBUTION_VERSION_CODENAME to '${IRODS_LINUX_DISTRIBUTION_VERSION_CODENAME}'")
  endif()
endif()

#CPACK names component package files as "${CPACK_PACKAGE_FILE_NAME}-${COMPONENT_NAME}"
#CPackDeb TO_UPPERs all the component names when checking the ${CPACK_DEBIAN_<COMPONENT>...} variables
# set( CPACK_PACKAGE_FILE_NAME "irods" )
# set( CPACK_ARCHIVE_COMPONENT_INSTALL ON )

if( DONOTDOTHIS )

#CPACK names component package files as "${CPACK_PACKAGE_FILE_NAME}-${COMPONENT_NAME}"
#CPackDeb TO_UPPERs all the component names when checking the ${CPACK_DEBIAN_<COMPONENT>...} variables
set( CPACK_PACKAGE_FILE_NAME "irods" )

if( CPACK_GENERATOR STREQUAL "DEB" )
  if( NOT CPACK_DEBIAN_PACKAGE_VERSION )
    set( CPACK_DEBIAN_PACKAGE_VERSION ${IRODS_VERSION} )
    set( CPACK_DEBIAN_PACKAGE_VERSION ${IRODS_VERSION} CACHE STRING "Version string used by .deb packages." FORCE )
  endif()
  if( CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" )
    set( CMAKE_SYSTEM_PROCESSOR "amd64" )
  endif()
  set( IRODS_PACKAGE_FILE_NAME_SUFFIX "_${CPACK_DEBIAN_PACKAGE_VERSION}~${IRODS_LINUX_DISTRIBUTION_VERSION_CODENAME}_${CMAKE_SYSTEM_PROCESSOR}" )
elseif( CPACK_GENERATOR STREQUAL "RPM" )
  set( IRODS_PACKAGE_FILE_NAME_SUFFIX "-${IRODS_VERSION}-1.${CMAKE_SYSTEM_PROCESSOR}" )
else()
  set( IRODS_PACKAGE_FILE_NAME_SUFFIX "-${IRODS_VERSION}-${IRODS_LINUX_DISTRIBUTION_NAME}${IRODS_LINUX_DISTRIBUTION_VERSION_MAJOR}-${CMAKE_SYSTEM_PROCESSOR}" )
endif()

set( IRODS_PACKAGE_COMPONENT_SERVER_NAME "server${IRODS_PACKAGE_FILE_NAME_SUFFIX}" )

string( TOUPPER ${IRODS_PACKAGE_COMPONENT_SERVER_NAME} IRODS_PACKAGE_COMPONENT_SERVER_NAME_UPPERCASE )
if( CPACK_GENERATOR STREQUAL "RPM" )
  set( IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME "devel${IRODS_PACKAGE_FILE_NAME_SUFFIX}" )
  string( TOUPPER ${IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME} IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME_UPPERCASE )
elseif( CPACK_GENERATOR STREQUAL "DEB" )
  set( IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME "dev${IRODS_PACKAGE_FILE_NAME_SUFFIX}" )
  string( TOUPPER ${IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME} IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME_UPPERCASE )
else()
  set( IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME "dev${IRODS_PACKAGE_FILE_NAME_SUFFIX}")
  string( TOUPPER ${IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME} IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME_UPPERCASE )
endif()

string( TOUPPER ${IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME} IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME_UPPERCASE )
set( IRODS_PACKAGE_COMPONENT_RUNTIME_NAME "runtime${IRODS_PACKAGE_FILE_NAME_SUFFIX}" )
string( TOUPPER ${IRODS_PACKAGE_COMPONENT_RUNTIME_NAME} IRODS_PACKAGE_COMPONENT_RUNTIME_NAME_UPPERCASE )
set( IRODS_PACKAGE_COMPONENT_POSTGRES_NAME "database-plugin-postgres${IRODS_PACKAGE_FILE_NAME_SUFFIX}" )
string( TOUPPER ${IRODS_PACKAGE_COMPONENT_POSTGRES_NAME} IRODS_PACKAGE_COMPONENT_POSTGRES_NAME_UPPERCASE )
set( IRODS_PACKAGE_COMPONENT_MYSQL_NAME "database-plugin-mysql${IRODS_PACKAGE_FILE_NAME_SUFFIX}" )
string( TOUPPER ${IRODS_PACKAGE_COMPONENT_MYSQL_NAME} IRODS_PACKAGE_COMPONENT_MYSQL_NAME_UPPERCASE )
set( IRODS_PACKAGE_COMPONENT_ORACLE_NAME "database-plugin-oracle${IRODS_PACKAGE_FILE_NAME_SUFFIX}" )
string( TOUPPER ${IRODS_PACKAGE_COMPONENT_ORACLE_NAME} IRODS_PACKAGE_COMPONENT_ORACLE_NAME_UPPERCASE )


set( CPACK_INCLUDE_TOPLEVEL_DIRECTORY OFF )
set( CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY OFF )
set( CPACK_COMPONENTS_GROUPING IGNORE )
set( CPACK_PACKAGE_VERSION ${IRODS_VERSION} )
set( CPACK_PACKAGE_VERSION_MAJOR ${IRODS_VERSION_MAJOR} )
set( CPACK_PACKAGE_VERSION_MINOR ${IRODS_VERSION_MINOR} )
set( CPACK_PACKAGE_VERSION_PATCH ${IRODS_VERSION_PATCH} )
set( CPACK_PACKAGE_CONTACT "Renaissance Computing Institute <info@irods.org>" )
set( CPACK_PACKAGE_DESCRIPTION_SUMMARY "The integrated Rule-Oriented Data System" )
set( CPACK_PACKAGE_VENDOR "Renaissance Computing Institute <info@irods.org>" )

set( CPACK_DEB_COMPONENT_INSTALL ON )
set( CPACK_DEBIAN_PACKAGE_SECTION "contrib/science" )
set( CPACK_DEBIAN_COMPRESSION_TYPE "gzip" )
set( CPACK_DEBIAN_PACKAGE_PRIORITY "extra" )
set( CPACK_DEBIAN_PACKAGE_HOMEPAGE "https://irods.org" )
set( CPACK_DEBIAN_PACKAGE_SHLIBDEPS OFF )
set( CPACK_DEBIAN_PACKAGE_CONTROL_STRICT_PERMISSION ON )

set( CPACK_RPM_COMPONENT_INSTALL ON )
set( CPACK_RPM_PACKAGE_RELEASE "1" )
set( CPACK_RPM_PACKAGE_LICENSE "BSD-3-Clause" )
set( CPACK_RPM_PACKAGE_VENDOR "iRODS Consortium" )
set( CPACK_RPM_PACKAGE_URL "https://irods.org" )
set( CPACK_RPM_PACKAGE_AUTOREQ 0 )
set( CPACK_RPM_PACKAGE_AUTOPROV 0 )
set( CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "/usr/sbin" )
set( CPACK_RPM_PACKAGE_RELOCATABLE ON )

set( CPACK_ARCHIVE_COMPONENT_INSTALL ON )

endif( DONOTDOTHIS )

message( STATUS "CMAKE_SYSTEM_PROCESSOR:${CMAKE_SYSTEM_PROCESSOR}" )
message( STATUS "IRODS_LINUX_DISTRIBUTION_NAME:${IRODS_LINUX_DISTRIBUTION_NAME}" )
message( STATUS "IRODS_PACKAGE_FILE_NAME_SUFFIX:${IRODS_PACKAGE_FILE_NAME_SUFFIX}" )
message( STATUS "IRODS_PACKAGE_COMPONENT_SERVER_NAME:${IRODS_PACKAGE_COMPONENT_SERVER_NAME}" )
message( STATUS "IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME:${IRODS_PACKAGE_COMPONENT_DEVELOPMENT_NAME}" )
message( STATUS "IRODS_PACKAGE_COMPONENT_RUNTIME_NAME:${IRODS_PACKAGE_COMPONENT_RUNTIME_NAME}" )
message( STATUS "IRODS_PACKAGE_COMPONENT_POSTGRES_NAME:${IRODS_PACKAGE_COMPONENT_POSTGRES_NAME}" )
message( STATUS "IRODS_PACKAGE_COMPONENT_MYSQL_NAME:${IRODS_PACKAGE_COMPONENT_MYSQL_NAME}" )
message( STATUS "IRODS_PACKAGE_COMPONENT_ORACLE_NAME:${IRODS_PACKAGE_COMPONENT_ORACLE_NAME}" )

